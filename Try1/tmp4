declare fun {Factorial N}
	   local FactorialAux in
	      fun {FactorialAux N}
		 if N >= 1.0
		 then N*{FactorialAux N-1.0}
		 else 1.0
		 end
	      end
	      {FactorialAux N}
	   end
	end

declare fun {ReverseList L}
	   local ReverseAux in
	      fun {ReverseAux Remainder Partial}
		 case Remainder
		 of nil
		 then Partial
		 [] H|T then {ReverseAux T H|Partial}
		 end
	      end
	      {ReverseAux L nil}
	   end
	end

declare
fun {Last L N}
   local LastAux in
      fun {LastAux L N Partial}
	 case L of nil
	 then nil
	 else
	    if N =< 0.0
	    then nil
	    else
	       case L of nil then Partial
	       [] H|T then H|{LastAux T N-1 Partial}
	       end
	    end
	 end
      end
      {ReverseList {LastAux {ReverseList L} N nil }}
   end
end

declare fun {Power N X}
	   local PowerAux in
	      fun {PowerAux N X}
		 if N >= 1.0
		 then X*{PowerAux N-1.0 X}
		 else 1.0
		 end
	      end
	      {PowerAux N X}
	   end
	end

declare fun {Sine N Mult X}
	   local SineAux in
	      fun {SineAux N Mult X}
		(Mult*{Power 2.0*N-1.0 X})/{Factorial 2.0*N-1.0}
	      end
	      {SineAux N Mult X}
	   end
	end

declare fun lazy {ListOfIntsFrom N X}
	   local ListOfIntsFromAux in
	      fun {ListOfIntsFromAux N Mult X}
		 {Sine N Mult X}|{ListOfIntsFromAux N+1.0 ~Mult X}
	      end
	      {ListOfIntsFromAux N 1.0 X}
	   end
	end

declare fun {Take Xs K}
	   local TakeAux in
	      fun {TakeAux Xs K}
		 if K==0 then nil
		 else Xs.1|{Take Xs.2 K-1}
		 end
	      end
	      {TakeAux Xs K}
	   end
	end




L = {Last [1 2 5 5 2 45] 1}.1

{Browse L}
		 

{Browse {Take {ListOfIntsFrom 1.0 0.2} 10}}
declare A B D

declare fun {Approximate Xs Epsilon}
	   local ApproximateAux in
	      fun {ApproximateAux Xs Epsilon M}
		 A = {Last M 1}.1
		 B = Xs.1
		 D = A - B
		 if D =< 0.0 then D = ~D
		 else D = ~(~D)
		 end
		 if D =< Epsilon then M
		 else {ApproximateAux Xs.2 Epsilon M|B}
		 end
	      end
	      {ApproximateAux Xs Epsilon [0.0]}
	   end
	end

{Browse {Approximate {ListOfIntsFrom 1.0 0.2} 0.000001}}